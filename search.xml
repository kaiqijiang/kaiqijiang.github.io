<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2017年五月21日]]></title>
    <url>%2F2017%2F05%2F21%2F2017%E5%B9%B4%E4%BA%94%E6%9C%8821%E6%97%A5%2F</url>
    <content type="text"><![CDATA[昨天晚上攸妹做梦，说了句“草莓味的”，可能是白天跟她讨论狗肉烧什么味道好导致的，我说我喜欢麻辣的，她说喜欢草莓味道的。今天下午阿爹带她去新华书店买玩具，买的又是一套朵拉的烧饭工具，家里烧饭套装已经几套了，大家一致认为攸妹以后可能是要向厨师方向发展。买玩具是因为去无锡玩，哥哥不分享玩具给她玩，所以阿爹阿婆答应攸妹回昆山给她买很多玩具。（ ‘▿ ‘ ）]]></content>
      <categories>
        <category>攸妹成长</category>
      </categories>
      <tags>
        <tag>成长记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[环秀晓筑的两天]]></title>
    <url>%2F2017%2F02%2F06%2F%E7%8E%AF%E7%A7%80%E6%99%93%E7%AD%91%E7%9A%84%E4%B8%A4%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[过年回来刚上班两天，就请了一天假到环秀晓筑度假村嗨皮。时间还是太紧，两天时间不够，温泉勉强泡了一次，算是完成攸妹心心念念的愿望。回来路上攸妹睡着，到家后放到床上大哭不止，哭得呕吐、哽咽。直到看完朵拉以后才算重新满血复活。 这次单反带了，但照片拍的不多。最近攸妹太皮，一路上只顾照看，没有精力再多拍照片了。ps：最近喜欢用Fuji Astia 100F的滤镜]]></content>
      <categories>
        <category>攸妹成长</category>
      </categories>
      <tags>
        <tag>成长记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中证海外中国互联网50指数]]></title>
    <url>%2F2017%2F01%2F18%2F%E4%B8%AD%E8%AF%81%E6%B5%B7%E5%A4%96%E4%B8%AD%E5%9B%BD%E4%BA%92%E8%81%94%E7%BD%9150%E6%8C%87%E6%95%B0%2F</url>
    <content type="text"><![CDATA[易方达中国互联网50ETF（代码513050，简称中概互联）于2017年01月04日成立。跟踪的是中证海外中国互联网50指数。管理费率0.60%（每年），托管费率0.25%（每年）。 另一只跟踪中证海外中国互联网50指数的为2015年4月底推出的交银中国互联（代码164906，简称中国互联，LOF）。 中证海外中国互联网50指数介绍： 选取海外交易所上市的中国互联网企业组成成分，以反映在在海外交易所上市中国互联网企业的整体走势。[官方链接][http://www.csindex.com.cn/sseportal/csiportal/zs/jbxx/report.do?code=H11136&amp;&amp;subdir=1]，[历史走势查询][https://markets.ft.com/data/indices/tearsheet/summary?s=H11137:PSE] 主要权重股有：BAT，携程，京东，优酷土豆等。 由于交银中国互联是非ETF型指数基金，预计在上涨期间，净值会落后于中概互联ETF。 交银中国互联（代码164906，LOF）自合同成立（2015年5月27日）以来，多数季度均能战胜业绩基准（中证海外中国互联网指数收益率×95%+银行活期存款利率(税后)×5%），累计战胜业绩基准约10个百分点，多数时间仓位未达基准仓位，二级市场成交量偏小。]]></content>
      <categories>
        <category>etf记录</category>
      </categories>
      <tags>
        <tag>指数</tag>
        <tag>etf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[指标、PE(TTM)及指数]]></title>
    <url>%2F2017%2F01%2F05%2F%E6%8C%87%E6%A0%87%E3%80%81PE(TTM)%E5%8F%8A%E6%8C%87%E6%95%B0%2F</url>
    <content type="text"><![CDATA[指数参考指标储蓄搬家 可以发现最近三次储蓄搬家的时点分别为2007年10月、2009年10月和2015年5月 数据参照：市盈率、M1、货币量、开户数、持仓帐户、个股主力线、散户线。 大致策略为： 1234低于平均买1份低于平均的80%，买2份低于平均的70%，买4份低于平均的60%，买8份 TTM具体算法TTM（Trailing Tweleve Months） a. 证监会要求4月底前所有的年报和季报出完。那么1-4月的数据，比如PE-TTM中归属于母公司的净利润就成为了：Ｎ-2年的四季报数据 + N-1年的前三季报数据。 b. 8月底前出完半年报，那么5-8月的数据就是：N-1年的二三四季度数据 + N年的一季度数据。 c. 10月底前出完三季报，那么9-10月的数据就是：N-1年的三四季度数据 + N年的一二季度数据 d. 最后11-12月的数据就是：N-1年的四季度数据 + N年的一二三季度数据。 如果深入看看以上这个数据，细心的朋友就会发现年报和一季报集中于3月份到4月份，尼玛，那不就没有用去年年报的数据了？是的，就是这样。 作者：b_ing链接：https://xueqiu.com/4939534471/74550722来源：雪球著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 csIndex和wind的PE（TTM）数据不同在于： csIndex剔除了H股的市值和利润 csIndex剔除了亏损股 因此，csIndex得出的数据比wind的数据要大。 rational-person网站加权平均值、算术平均值、中位数 a. 加权平均值：所有公司总市值之和 / 所有公司归属于母公司所有者净利润之和。也就是把样本里的所有公司当成一家公司 b. 算术平均值：单独计算每家公司的PE TTM，为了剔除极端值对其的影响，剔除最高的和最低的10%，然后相加，再除以样本总数。 c. 中位数：单独计算每家公司的PE TTM，排序，如果样本数为奇数，取正中间的一个，如果样本数为偶数，去中间的两个加和然后除以2。 关注的指数 上证180etf（510180）、深圳100etf（159901）、中小板etf（159902）、300etf（510300）、500etf（510500）、恒生etf（159920）、商品etf（510170）和医药etf（159929）、消费etf（159928）、黄金etf（518800）]]></content>
      <categories>
        <category>etf记录</category>
      </categories>
      <tags>
        <tag>etf</tag>
        <tag>基本概念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[流感、呕吐、疲累的一周]]></title>
    <url>%2F2016%2F12%2F25%2F%E6%B5%81%E6%84%9F%E3%80%81%E5%91%95%E5%90%90%E3%80%81%E7%96%B2%E7%B4%AF%E7%9A%84%E4%B8%80%E5%91%A8%2F</url>
    <content type="text"><![CDATA[攸妹持续一周的发热今天终于好了，但中午还是吐了一次，好在精神状态很好。 上午一起做“陶艺” 捏了一个大臭臭送给妈妈😂。 晚上还要家庭聚餐，希望快快好起来。]]></content>
      <categories>
        <category>攸妹成长</category>
      </categories>
      <tags>
        <tag>成长记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[持续集成daocloud同时部署hexo到coding和github]]></title>
    <url>%2F2016%2F12%2F21%2F%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90daocloud%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2hexo%E5%88%B0coding%E5%92%8Cgithub%2F</url>
    <content type="text"><![CDATA[1.1搭建hexohexo优点在于可以搭建方便，小巧，部署命令简单。但缺点在于必须本地搭建环境生成静态网页后再部署，在不同电脑间使用只能重新搭建环境。 搭建方法参考：官方中文文档。只需安装：Node.js和Git 常用命令： 1234567sudo npm install hexo-cli -g //安装hexohexo init //初始化npm install //安装依赖包hexo g //生成静态的网页至public目录hexo s //开启本地服务，可以在本地预览hexo d //上传生产的文件到配置的服务仓库（见_config.yml）hexo n "postName" //新建文章 安装hexo过程中遇到的各种坑： 执行hexo d -g可能出现ERROR Deployer not found: git或者 ERROR Deployer not found: github 执行：npm install hexo-deployer-git —save 执行hexo无反应 执行：npm install hexo-server —save 执行安装npm install hexo时因某些原因可能需开代理，或者更换npm淘宝镜像。 执行hexo g时出现 1234ERROR Plugin load failed: hexo-generator-baidu-sitemap tabReferenceError: hexo is not definedERROR Plugin load failed: hexo-yuidocReferenceError: hexo is not defined 执行 12npm install hexo-generator-sitemap@1 --savenpm install hexo-generator-feed@1 --save 1.2注册GitHub和Coding由于国内访问GitHub不稳定，我们同时将hexo部署到Coding上，并且通过DNSPOD进行分流，将国外访问解析到GitHub上，国内解析到Coding。 另外Coding可以免费建私有库，后续hexo的源文件需要上传至私有库。 同时部署GitHub和Coding只需在执行hexo d之前配置好本地_config.yml文件，将GitHub和Coding地址加进去，最下面配置为：1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:kaiqijiang/kaiqijiang.github.io.git,master coding: git@git.coding.net:jmoyo/jmoyo.git,master 配置后执行hexo d -g就可以同时部署到GitHub和Coding。 部署前SSH公钥要先分别加入至GitHub和Coding。添加方法 1.3不同电脑间部署hexo思路1.3.1通过dropbox同步： 直接同步hexo整个目录：缺点是每次即使做了很小的更改，也会产生数量上万的文件需要同步。而且不同电脑下环境不同也无法运行，因此同步整个目录行不通。 同步目录下的配置文件及source等文件夹：缺点是每次需要手动复制文件夹到本地，生成静态网页完成部署后，又要复制回去，比较麻烦。而且本地电脑仍需要安装环境。 1.3.2通过在GitHub或Coding另建仓库或分支备份源文件 这种方法较为普遍，但缺点有： 两台电脑同样需安装hexo环境。 需要使用Git命令较多，比较麻烦。 源码如果放GitHub上，隐私数据容易暴露，建议放在Coding私有库。 上传源文件到git先删除文件夹下.git隐藏文件夹,注意themes文件夹中可能也有，编辑.gitignore文件，内容为： 1234567.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/ 根目录执行Git Bash，执行 12345git initgit add .git commit -m “附加说明”git remote add origin https://git.coding.net/jmoyo/ci.gitgit push -u origin master 另一台电脑取回源文件根目录执行 1234git initgit remote add origin https://git.coding.net/jmoyo/ci.gitgit fetch --allgit reset --hard origin/master 这里使用reset是不做任何合并处理，强制将本地回退到和远程一样。如果用git pull命令还要考虑文件冲突问题。 上传git进行备份hexo d完成部署博客后，重新上传新的源文件。执行： 123git add .git commit -m &apos;附加说明&apos;git push 1.3.3持续集成方式进行部署 持续集成有Travis CI，AppVeyor，国内的有DaoCloud,三种对比使用后还是DaoCloud用下来最为方便，因为同为国内，可以直接支持Coding仓库的导入构建镜像，其次AppVeyor，使用也较简单，最后是Travis CI，访问时速度总是很慢。 虽然有人提到DaoCloud有时不稳定，而且相比较Travis CI、AppVeyor，也缺少Personal Access Token的加密解密功能，安全性上差一点。不过本身Coding也不支持Personal Access Token，所以也无所谓，好在Coding免费的私有库弥补了些缺陷。 部署方式： Git pushhexo源文件到Coding上根目录 注册DaoCloud 新建项目名称CI，选择导入Coding上私有库中的hexo源文件，开启持续集成，选择master根目录，手动构建镜像。查看镜像，记下镜像地址。 在本地根目录新建 Dockerfile文件，内容为： 12345678910111213141516171819FROM node:slim#修改成和git config --global中的名字和邮箱MAINTAINER jmoyo &lt;**@gmail.com&gt;# instal basic tool RUN apt-get update &amp;&amp; apt-get install -y git ssh-client ca-certificates --no-install-recommends &amp;&amp; rm -r /var/lib/apt/lists/*# set time zoneRUN echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone &amp;&amp; dpkg-reconfigure -f noninteractive tzdataRUN npm install# install hexoRUN npm install hexo-cli -g# install hexo serverRUN npm install hexo-server# set base dir#RUN mkdir /hexo# set home dir#WORKDIR /hexoEXPOSE 4000#CMD [&quot;/bin/bash&quot;] 在本地根目录新建daocloud.yml文件，最近官方更新为2.0版本，官方文档说明文档。内容为： 12345678910111213141516171819202122232425262728293031323334version: &quot;2.0&quot; image: daocloud.io/jmoyo/ci:latest #修改为刚才镜像地址 install: - npm install before_script: # 新建私钥文件夹 - mkdir ~/.ssh # 移动私钥及ssh配置 - mv .daocloud/id_rsa ~/.ssh/id_rsa - mv .daocloud/ssh_config ~/.ssh/config # 赋予可读权限 - chmod 600 ~/.ssh/id_rsa - chmod 600 ~/.ssh/config # 启动ssh-agent - eval $(ssh-agent) # 添加私钥 - ssh-add ~/.ssh/id_rsa # 删除整个私钥目录 - rm -rf .daocloud # 配置git全局的用户名和邮件，和上面Dockerfile中一致 - git config --global user.name &quot;Jmoyo&quot; - git config --global user.email &quot;**@gmail.com&quot; script: # hexo发布 - hexo clean - hexo d -g # 删除私钥文件夹 - rm -rf ~/.ssh/ build: lite_image: compile: dockerfile_path: Dockerfile build_dir: / cache: true 在根目录新建.daocloud文件夹，将本机.ssh目录中id_rsa放入该文件夹，再新增ssh _config文件，文件内容： 12StrictHostKeyChecking noUserKnownHostsFile /dev/null 随后，git push到Coding完成配置。 后续使用： 直接本地写好md文章后，直接git push就可以了。甚至可以直接在Coding的source/_posts中直接新建或上传md文件。DaoCloud监测到变化后将自动构建，发布到Coding和GitHub服务上。 这种方式主要缺点在于私钥是保存在Coding私有库里，没有像Travis CI、AppVeyor将个人私钥加密，安全性要差点。 2. 参考文档 hexo搭建个人博客 多网站ssh部署方案 npm安装hexo速度过慢 随时随地让Hexo持续部署 使用Travis CI自动部署Github/Coding Pages博客 Hexo的版本控制与持续集成 开始使用NexT主题 hexo简洁主题推荐]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
        <tag>网络</tag>
      </tags>
  </entry>
</search>